Q: What is Node JS  and Why it is not same as JS ? How JS was used before in Front-end and what made this scripting language a programming language?

-> JS was a scripting language for making front end interactive to the client. It was not a stand alone language as it is today. A programming language has an engine that converts the source code to binary code. Along with this, we also have a output window (called run-time environment or window). We can download this engine into our system and run any corresponding programming language. The story for JS was different. Its engine was not available for systems; It used to be joined within a web browser (some of the JS engines are: V8 engine in google chrome, Chakra in internet explorer, etc. ). That means, we can type the JS code (i.e., make a program) in any text editor and save it with .js extension but can't run it. To run it, we need to type the same code in a console of web browser.

Now, the console of a web browser is a temporary script shell. Once we referesh the page, the code is gone. So, the console is only used for teaching or study purpose or realtime experiments in a webpage. Web developers had to make a seperate code file for JS with .js extension and then link it within html file. In this way, JS was used. The turning point was to make a seperate engine for JS. Node Js (or simply node) was introduced which is a run time environment and has an JS engine including JS libraries. Bascially Node Js is a complete kit for running JS in any system, making JS a stand alone programming language !!

But, still here is a lot more. JS in web browsers is very limited. It can perform network related task, interactivity related task but is not allowed to talk to the system. It was allowed to talk to the browser only and so browsers are provided wth so many functionalities. NodeJS is different. It understands the JS but this JS is very less similar to what we use in browsers. That's why people differentiate between Node and JS. They call Node as a stand alone language that is a general purpose. We will not found many functions of the browsers in Node.

Q: What is the difference between Typescript and Javascript?

-> JS is a loosely typed language. Many of the objects we interact with, we never care about their types. TS is a development tool that does static checking for JS. At the end, all the typescript code converts back to JS code. Then what's the benefit of it? Probably just reducing the unwanted bugs.
